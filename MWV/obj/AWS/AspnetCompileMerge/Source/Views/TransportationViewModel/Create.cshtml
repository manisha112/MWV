@model MWV.ViewModels.TransportationViewModel
@{
    ViewBag.Title = "Create";
}
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.1/jquery.min.js"></script>
<script type="text/javascript">
    $(function () {
        $("#order_id").change(function () {
                var selectedItem = $(this).val();
                var ddlStates = $("#order_product_id");
             var statesProgress = $("#states-loading-progress");
             statesProgress.show();
             alert(selectedItem);
             $.ajax(
                 {
                 cache: false,
                 type: "GET",
                 url: "/TransportationViewModel/GetProductsByOrderId/" + selectedItem,
                 contentType: "application/json; charset=utf-8",
                 success: function (data) {                        
                     ddlStates.html('');
                     $.each(data, function (id, option) {
                         ddlStates.append($('<option></option>').val(option.id).html(option.name));
                     });
                     statesProgress.hide();
                 },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert("ajaxOptions " + ajaxOptions);
                        alert('Failed to retrieve states.');
                        statesProgress.hide();
                    }
                });
            });
        });
</script>
<h2>Transportation Details</h2>

</br>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
        <h4>Truck_dispatchViewModel</h4>
        <hr />
        @Html.ValidationSummary(true)
        @:<div class="form-group">
    @Html.LabelFor(model => model.papermill_id) @: &nbsp;&nbsp;

    @Html.DropDownListFor(model => model.papermill_id, new System.Web.Mvc.SelectList(Model.locations, "papermill_id", "name"))

    @: </br></br>
    @Html.LabelFor(model => model.VehicleCapacity) @: &nbsp;
    @Html.TextBoxFor(model => model.VehicleCapacity, new { @class = "form-control" })

    @: </br>
    @Html.LabelFor(model => model.VehicleNumber) @: &nbsp;
    @Html.TextBoxFor(model => model.VehicleNumber, new { @class = "form-control" })

    @: </br>
    @Html.LabelFor(model => model.agent_dispatched_on) @: &nbsp;
    @Html.EditorFor(model => model.agent_dispatched_on, new { @class = "form-control" })

    @: </br>
    @Html.LabelFor(model => model.estimated_arrival) @: &nbsp;
    @Html.EditorFor(model => model.estimated_arrival, new { @class = "form-control" })

    @: </br>
    @:</div>


        @: </br>
        @Html.Label("--------------- Add Cargo ---------------") @: &nbsp;
        @:</br></br>

        @:<div class="form-group">
    @Html.LabelFor(model => model.order_id) @: &nbsp;&nbsp;
    @Html.DropDownListFor(model => model.order_id, new System.Web.Mvc.SelectList(Model.orders, "order_id", "order_id"))

    @: </br></br>
    @Html.LabelFor(model => model.order_product_id) @: &nbsp;&nbsp;
    @Html.DropDownListFor(model => model.order_product_id, new System.Web.Mvc.SelectList(Model.orderproducts, "order_product_id", "product_code"))
     <span id="states-loading-progress" style="display: none;">Please wait..</span>
    @:</br></br>
    @Html.LabelFor(model => model.qty)
    @Html.TextBoxFor(model => model.qty, new { @class = "form-control" })
    @:
    @:</div>


        @:</br>

        <p>
            @*@Html.ActionLink("Add Cargo", "SaveTruckDetails", "TruckDispatchDetails", new { id = Model.order_id }, null)*@
        </p>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
        @:
   
}
    @section Scripts {

        <script src="~/Scripts/ShowAddCargo.js"></script>
    }


